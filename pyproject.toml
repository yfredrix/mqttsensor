[project]
name = "mqttsensor"
version = "0.2.1"
description = "A standard library for MQTT sensors within a home -> Given the topic and payload, it will create a sensor object. The payload will be inot the format expected by the [mqtt-influxdb](https://github.com/yfredrix/mqtt-influxdb) container."
readme = "README.md"
authors = [
    { name = "yfredrix", email = "skier@live.nl" }
]
requires-python = ">=3.10"
dependencies = [
    "loguru>=0.7.3",
    "paho-mqtt>=2.1.0",
    "toml>=0.10.2",
]

[dependency-groups]
dev = [
    "black>=25.1.0",
    "pytest>=8.3.5",
    "pytest-mock>=3.14.0",
    "ruff>=0.11.10",
]

[project.scripts]
mqttsensor = "mqttsensor:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.semantic_release]
assets = []
build_command_env = []
build_command = "pip install uv && uv build"
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "conventional"
logging_use_named_masks = false
major_on_zero = true
allow_zero_version = true
no_git_verify = false
tag_format = "v{version}"
version_variable = [
    "src/mqttsensor/__init__.py:__version__"
]
version_toml = [
    "pyproject.toml:project.version"
]

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = true

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "break", "BREAKING CHANGE", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
major_tags = ["break", "BREAKING CHANGE"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
default_bump_level = 0

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false
insecure = false

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true
upload_to_PyPi = true

[tool.black]
line-length = 127
